{"ast":null,"code":"var _jsxFileName = \"/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea, Button\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import PrintIcon from '@mui/icons-material/Print';\n// import { UserContext } from './Context';\n// import jsPDF from 'jspdf';\n// import html2canvas from 'html2canvas';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         document.title = response.data.name;\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   const handlePrint = () => {\n//     const input = document.getElementById('recipe-section');\n//     html2canvas(input).then(canvas => {\n//       const imgData = canvas.toDataURL('image/png');\n//       const pdf = new jsPDF('p', 'mm', 'a4');\n//       const imgProps = pdf.getImageProperties(imgData);\n//       const pdfWidth = pdf.internal.pageSize.getWidth();\n//       const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n//       pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n//       pdf.save(`${recipe.name}.pdf`);\n//     });\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Box id=\"recipe-section\">\n//             <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//               <CardMedia\n//                 component=\"img\"\n//                 height=\"300\"\n//                 image={`http://localhost:3000${recipe.image}`}\n//                 alt={recipe.name}\n//                 sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//               />\n//               <CardContent>\n//                 <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//                 <Divider sx={{ my: 2 }} />\n\n//                 <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//                 <List>\n//                   {recipe.ingredients.map((ingredient, index) => (\n//                     <ListItem key={index} disablePadding>\n//                       <ListItemText primary={ingredient} />\n//                     </ListItem>\n//                   ))}\n//                 </List>\n\n//                 <Divider sx={{ my: 2 }} />\n\n//                 <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//                 <List>\n//                   {recipe.preparationSteps.map((step, index) => (\n//                     <ListItem key={index}>\n//                       <ListItemText primary={`${index + 1}. ${step}`} />\n//                     </ListItem>\n//                   ))}\n//                 </List>\n//               </CardContent>\n//             </Card>\n//           </Box>\n//           <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n//             <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>\n//               הדפס מתכון\n//             </Button>\n//           </Box>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//             <CardMedia\n//               component=\"img\"\n//               height=\"300\"\n//               image={`http://localhost:3000${recipe.image}`}\n//               alt={recipe.name}\n//               sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//             />\n//             <CardContent>\n//               <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//               <List>\n//                 {recipe.ingredients.map((ingredient, index) => (\n//                   <ListItem key={index} disablePadding>\n//                     <ListItemText primary={ingredient} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//               <List>\n//                 {recipe.preparationSteps.map((step, index) => (\n//                   <ListItem key={index}>\n//                     <ListItemText primary={`${index + 1}. ${step}`} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             </CardContent>\n//           </Card>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport { UserContext } from './Context';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecipeData = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`).then(response => {\n      setRecipe(response.data);\n    }).catch(err => {\n      console.error(\"Error fetching recipe:\", err);\n    });\n    axios.get(`http://localhost:3000/response/${id}`).then(response => {\n      setRsponse(response.data);\n    }).catch(err => {\n      console.error(\"Error fetching responses:\", err);\n    });\n  }, [id]);\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n    axios.post(`http://localhost:3000/response`, responseData).then(response => {\n      setRsponse(prevResponses => [...prevResponses, response.data]);\n      setNewResponse('');\n      setShowInput(false);\n    }).catch(err => {\n      console.error(\"Error adding response:\", err);\n    });\n  };\n  if (!recipe || !rsponse) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u05D8\\u05D5\\u05E2\\u05DF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 4,\n      paddingTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      gutterBottom: true,\n      sx: {\n        mt: 2,\n        fontWeight: 'bold',\n        textDecoration: 'underline',\n        fontFamily: '\"Lora\", serif'\n      },\n      children: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      image: `http://localhost:3000${recipe.image}`,\n      alt: recipe.name,\n      sx: {\n        width: \"100%\",\n        maxWidth: 500,\n        height: 300,\n        borderRadius: 2,\n        boxShadow: 3,\n        objectFit: \"cover\",\n        mx: \"auto\",\n        display: \"block\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        borderRadius: 2,\n        padding: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold',\n          textAlign: 'center',\n          bgcolor: '#f5f5f5',\n          py: 1,\n          borderRadius: 1,\n          fontFamily: '\"Lora\", serif',\n          borderBottom: '2px solid #dc4337',\n          color: 'black'\n        },\n        children: \"\\u05DE\\u05E6\\u05E8\\u05DB\\u05D9\\u05DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: recipe.ingredients.map((ingredient, index) => {\n          const [amount, name] = ingredient.split(' ', 2);\n          return /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: '#fafafa',\n              borderRadius: 1,\n              padding: 1,\n              width: '80%',\n              boxShadow: 1,\n              transition: 'transform 0.3s',\n              '&:hover': {\n                transform: 'scale(1.05)',\n                boxShadow: 3\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '1rem',\n                fontWeight: '500',\n                color: '#555',\n                marginRight: 1\n              },\n              children: amount || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: '1rem',\n                fontWeight: '500',\n                color: '#555'\n              },\n              children: name || ingredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold',\n          textAlign: 'center',\n          bgcolor: '#f5f5f5',\n          py: 1,\n          borderRadius: 1,\n          borderBottom: '2px solid #dc4337',\n          fontFamily: '\"Lora\", serif'\n        },\n        children: \"\\u05E9\\u05DC\\u05D1\\u05D9 \\u05D4\\u05DB\\u05E0\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 2,\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: recipe.preparationSteps.map((step, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              textAlign: 'start'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: ` ${step}`,\n              sx: {\n                fontFamily: '\"Varela Round\", sans-serif',\n                direction: \"rtl\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold',\n          textAlign: 'center',\n          bgcolor: '#f5f5f5',\n          py: 1,\n          borderBottom: '2px solid #dc4337',\n          borderRadius: 1,\n          fontFamily: '\"Lora\", serif'\n        },\n        children: \"\\u05EA\\u05D2\\u05D5\\u05D1\\u05D5\\u05EA \\u05E2\\u05DC \\u05D4\\u05DE\\u05EA\\u05DB\\u05D5\\u05DF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 2,\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [rsponse.map((response, index) => {\n            var _response$userCode;\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                textAlign: 'start'\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      fontFamily: '\"Varela Round\", sans-serif',\n                      direction: \"rtl\",\n                      fontWeight: 'bold',\n                      display: 'inline-block',\n                      marginBottom: 1\n                    },\n                    children: response.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      fontSize: '0.875rem',\n                      color: '#555'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontFamily: '\"Varela Round\", sans-serif'\n                      },\n                      children: response === null || response === void 0 ? void 0 : (_response$userCode = response.userCode) === null || _response$userCode === void 0 ? void 0 : _response$userCode.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      sx: {\n                        fontFamily: '\"Varela Round\", sans-serif'\n                      },\n                      children: new Date(response.publishDate).toLocaleDateString('he-IL')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this);\n          }), user && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              direction: \"rtl\",\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mt: 2\n            },\n            children: [showInput && /*#__PURE__*/_jsxDEV(TextField, {\n              color: \"black\",\n              label: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\",\n              variant: \"outlined\",\n              fullWidth: true,\n              value: newResponse,\n              onChange: e => setNewResponse(e.target.value),\n              sx: {\n                marginRight: 2,\n                direction: \"rtl\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setShowInput(!showInput),\n              color: \"black\",\n              children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), showInput && /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: addResponse,\n              color: \"black\",\n              children: \"\\u05E9\\u05DC\\u05D7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeData, \"mmwqfJYy0qOqMGBWF41p0O9ymZM=\", false, function () {\n  return [useParams];\n});\n_c = RecipeData;\nexport default RecipeData;\nvar _c;\n$RefreshReg$(_c, \"RecipeData\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","axios","Container","Typography","Box","CardMedia","Paper","List","ListItem","ListItemText","TextField","IconButton","BorderColorIcon","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeData","_s","id","recipe","setRecipe","rsponse","setRsponse","newResponse","setNewResponse","showInput","setShowInput","user","get","then","response","data","catch","err","console","error","addResponse","responseData","userCode","_id","content","recipeId","publishDate","Date","post","prevResponses","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","paddingTop","variant","align","gutterBottom","fontWeight","textDecoration","fontFamily","name","component","image","alt","width","maxWidth","height","borderRadius","boxShadow","objectFit","mx","display","padding","textAlign","bgcolor","py","borderBottom","color","flexDirection","alignItems","gap","ingredients","map","ingredient","index","amount","split","justifyContent","backgroundColor","transition","transform","fontSize","marginRight","elevation","p","preparationSteps","step","primary","direction","_response$userCode","marginBottom","username","toLocaleDateString","label","fullWidth","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea, Button\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import PrintIcon from '@mui/icons-material/Print';\n// import { UserContext } from './Context';\n// import jsPDF from 'jspdf';\n// import html2canvas from 'html2canvas';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         document.title = response.data.name;\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   const handlePrint = () => {\n//     const input = document.getElementById('recipe-section');\n//     html2canvas(input).then(canvas => {\n//       const imgData = canvas.toDataURL('image/png');\n//       const pdf = new jsPDF('p', 'mm', 'a4');\n//       const imgProps = pdf.getImageProperties(imgData);\n//       const pdfWidth = pdf.internal.pageSize.getWidth();\n//       const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n//       pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n//       pdf.save(`${recipe.name}.pdf`);\n//     });\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Box id=\"recipe-section\">\n//             <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//               <CardMedia\n//                 component=\"img\"\n//                 height=\"300\"\n//                 image={`http://localhost:3000${recipe.image}`}\n//                 alt={recipe.name}\n//                 sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//               />\n//               <CardContent>\n//                 <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//                 <Divider sx={{ my: 2 }} />\n\n//                 <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//                 <List>\n//                   {recipe.ingredients.map((ingredient, index) => (\n//                     <ListItem key={index} disablePadding>\n//                       <ListItemText primary={ingredient} />\n//                     </ListItem>\n//                   ))}\n//                 </List>\n\n//                 <Divider sx={{ my: 2 }} />\n\n//                 <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//                 <List>\n//                   {recipe.preparationSteps.map((step, index) => (\n//                     <ListItem key={index}>\n//                       <ListItemText primary={`${index + 1}. ${step}`} />\n//                     </ListItem>\n//                   ))}\n//                 </List>\n//               </CardContent>\n//             </Card>\n//           </Box>\n//           <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n//             <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>\n//               הדפס מתכון\n//             </Button>\n//           </Box>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\n\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//             <CardMedia\n//               component=\"img\"\n//               height=\"300\"\n//               image={`http://localhost:3000${recipe.image}`}\n//               alt={recipe.name}\n//               sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//             />\n//             <CardContent>\n//               <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//               <List>\n//                 {recipe.ingredients.map((ingredient, index) => (\n//                   <ListItem key={index} disablePadding>\n//                     <ListItemText primary={ingredient} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//               <List>\n//                 {recipe.preparationSteps.map((step, index) => (\n//                   <ListItem key={index}>\n//                     <ListItemText primary={`${index + 1}. ${step}`} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             </CardContent>\n//           </Card>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\n\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport { UserContext } from './Context';\n\nconst RecipeData = () => {\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`)\n      .then(response => {\n        setRecipe(response.data);\n      })\n      .catch(err => {\n        console.error(\"Error fetching recipe:\", err);\n      });\n\n    axios.get(`http://localhost:3000/response/${id}`)\n      .then(response => {\n        setRsponse(response.data);\n      })\n      .catch(err => {\n        console.error(\"Error fetching responses:\", err);\n      });\n  }, [id]);\n\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n\n    axios.post(`http://localhost:3000/response`, responseData)\n      .then(response => {\n        setRsponse(prevResponses => [...prevResponses, response.data]);\n        setNewResponse('');\n        setShowInput(false);\n      })\n      .catch(err => {\n        console.error(\"Error adding response:\", err);\n      });\n  };\n\n  if (!recipe || !rsponse) {\n    return <div>טוען...</div>;\n  }\n\n  return (\n    <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n      <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n        {recipe.name}\n      </Typography>\n\n      <CardMedia\n        component=\"img\"\n        image={`http://localhost:3000${recipe.image}`}\n        alt={recipe.name}\n        sx={{\n          width: \"100%\",\n          maxWidth: 500,\n          height: 300,\n          borderRadius: 2,\n          boxShadow: 3,\n          objectFit: \"cover\",\n          mx: \"auto\",\n          display: \"block\"\n        }}\n      />\n\n      <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n        <Typography\n          variant=\"h5\"\n          gutterBottom\n          sx={{\n            fontWeight: 'bold',\n            textAlign: 'center',\n            bgcolor: '#f5f5f5',\n            py: 1,\n            borderRadius: 1,\n            fontFamily: '\"Lora\", serif',\n            borderBottom: '2px solid #dc4337',\n            color: 'black'\n          }}\n        >\n          מצרכים\n        </Typography>\n\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n          {recipe.ingredients.map((ingredient, index) => {\n            const [amount, name] = ingredient.split(' ', 2);\n            return (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  backgroundColor: '#fafafa',\n                  borderRadius: 1,\n                  padding: 1,\n                  width: '80%',\n                  boxShadow: 1,\n                  transition: 'transform 0.3s',\n                  '&:hover': {\n                    transform: 'scale(1.05)',\n                    boxShadow: 3\n                  }\n                }}\n              >\n                <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n                  {amount || '-'}\n                </Typography>\n                <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n                  {name || ingredient}\n                </Typography>\n              </Box>\n            );\n          })}\n        </Box>\n      </Box>\n\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h5\" gutterBottom sx={{\n          fontWeight: 'bold',\n          textAlign: 'center',\n          bgcolor: '#f5f5f5',\n          py: 1,\n          borderRadius: 1,\n          borderBottom: '2px solid #dc4337',\n          fontFamily: '\"Lora\", serif',\n        }}>\n          שלבי הכנה\n        </Typography>\n        <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n          <List>\n            {recipe.preparationSteps.map((step, index) => (\n              <ListItem sx={{ textAlign: 'start' }} key={index}>\n                <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      </Box>\n\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h5\" gutterBottom sx={{\n          fontWeight: 'bold',\n          textAlign: 'center',\n          bgcolor: '#f5f5f5',\n          py: 1,\n          borderBottom: '2px solid #dc4337',\n          borderRadius: 1,\n          fontFamily: '\"Lora\", serif',\n        }}>\n          תגובות על המתכון\n        </Typography>\n        <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n          <List>\n            {rsponse.map((response, index) => (\n              <ListItem sx={{ textAlign: 'start' }} key={index}>\n                <ListItemText\n                  primary={\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        sx={{\n                          fontFamily: '\"Varela Round\", sans-serif',\n                          direction: \"rtl\",\n                          fontWeight: 'bold',\n                          display: 'inline-block',\n                          marginBottom: 1,\n                        }}\n                      >\n                        {response.content}\n                      </Typography>\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n                        <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n                          {response?.userCode?.username}\n                        </Typography>\n                        <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n                          {new Date(response.publishDate).toLocaleDateString('he-IL')}\n                        </Typography>\n                      </Box>\n                    </>\n                  }\n                />\n              </ListItem>\n            ))}\n\n            {user && (\n              <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n                {showInput && (\n                  <TextField\n                    color='black'\n                    label=\"הוסף תגובה\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={newResponse}\n                    onChange={(e) => setNewResponse(e.target.value)}\n                    sx={{ marginRight: 2, direction: \"rtl\" }}\n                  />\n                )}\n                <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n                  <BorderColorIcon sx={{ fontSize: 40 }} />\n                </IconButton>\n                {showInput && (\n                  <IconButton onClick={addResponse} color=\"black\">\n                    שלח\n                  </IconButton>\n                )}\n              </Box>\n            )}\n          </List>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RecipeData;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}