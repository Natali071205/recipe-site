{"ast":null,"code":"\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;","map":{"version":3,"names":[],"sources":["/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx"],"sourcesContent":["\n\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}