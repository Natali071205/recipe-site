{"ast":null,"code":"var _jsxFileName = \"/Users/nataliatiya/project/client/my-app/src/project/SingUp.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { TextField, Button } from '@mui/material';\n\n// preview-start\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providers = [{\n  id: 'credentials',\n  name: 'Email and Password'\n}];\n// preview-end\n\nconst signIn = async (provider, formData) => {\n  const promise = new Promise(resolve => {\n    setTimeout(() => {\n      alert(`Signing in with \"${provider.name}\" and credentials: ${formData.get('email')}, ${formData.get('password')}, Name: ${formData.get('name')}`);\n      resolve();\n    }, 300);\n  });\n  return promise;\n};\nexport default function CredentialsSignInPage() {\n  _s();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(SignInPage, {\n      signIn: signIn,\n      providers: providers,\n      slotProps: {\n        emailField: {\n          autoFocus: false\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        name: \"name\",\n        variant: \"outlined\",\n        fullWidth: true,\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CredentialsSignInPage, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = CredentialsSignInPage;\nvar _c;\n$RefreshReg$(_c, \"CredentialsSignInPage\");","map":{"version":3,"names":["React","AppProvider","SignInPage","useTheme","TextField","Button","jsxDEV","_jsxDEV","providers","id","name","signIn","provider","formData","promise","Promise","resolve","setTimeout","alert","get","CredentialsSignInPage","_s","theme","children","slotProps","emailField","autoFocus","label","variant","fullWidth","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["/Users/nataliatiya/project/client/my-app/src/project/SingUp.jsx"],"sourcesContent":["import * as React from 'react';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { TextField, Button } from '@mui/material';\n\n// preview-start\nconst providers = [{ id: 'credentials', name: 'Email and Password' }];\n// preview-end\n\nconst signIn = async (provider, formData) => {\n  const promise = new Promise((resolve) => {\n    setTimeout(() => {\n      alert(\n        `Signing in with \"${provider.name}\" and credentials: ${formData.get('email')}, ${formData.get('password')}, Name: ${formData.get('name')}`,\n      );\n      resolve();\n    }, 300);\n  });\n  return promise;\n};\n\nexport default function CredentialsSignInPage() {\n  const theme = useTheme();\n  \n  return (\n    <AppProvider theme={theme}>\n      <SignInPage\n        signIn={signIn}\n        providers={providers}\n        slotProps={{\n          emailField: { autoFocus: false },\n        }}\n      >\n        {/* הוספת שדה טקסט לשם */}\n        <TextField\n          label=\"Name\"\n          name=\"name\"\n          variant=\"outlined\"\n          fullWidth\n          style={{ marginBottom: '16px' }}\n        />\n        {/* הוספת כפתור התחברות */}\n        <Button variant=\"contained\" color=\"primary\" fullWidth>\n          Sign In\n        </Button>\n      </SignInPage>\n    </AppProvider>\n  );\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAAC;EAAEC,EAAE,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAqB,CAAC,CAAC;AACrE;;AAEA,MAAMC,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC3C,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;IACvCC,UAAU,CAAC,MAAM;MACfC,KAAK,CACH,oBAAoBN,QAAQ,CAACF,IAAI,sBAAsBG,QAAQ,CAACM,GAAG,CAAC,OAAO,CAAC,KAAKN,QAAQ,CAACM,GAAG,CAAC,UAAU,CAAC,WAAWN,QAAQ,CAACM,GAAG,CAAC,MAAM,CAAC,EAC1I,CAAC;MACDH,OAAO,CAAC,CAAC;IACX,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;EACF,OAAOF,OAAO;AAChB,CAAC;AAED,eAAe,SAASM,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC9C,MAAMC,KAAK,GAAGnB,QAAQ,CAAC,CAAC;EAExB,oBACEI,OAAA,CAACN,WAAW;IAACqB,KAAK,EAAEA,KAAM;IAAAC,QAAA,eACxBhB,OAAA,CAACL,UAAU;MACTS,MAAM,EAAEA,MAAO;MACfH,SAAS,EAAEA,SAAU;MACrBgB,SAAS,EAAE;QACTC,UAAU,EAAE;UAAEC,SAAS,EAAE;QAAM;MACjC,CAAE;MAAAH,QAAA,gBAGFhB,OAAA,CAACH,SAAS;QACRuB,KAAK,EAAC,MAAM;QACZjB,IAAI,EAAC,MAAM;QACXkB,OAAO,EAAC,UAAU;QAClBC,SAAS;QACTC,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEF5B,OAAA,CAACF,MAAM;QAACuB,OAAO,EAAC,WAAW;QAACQ,KAAK,EAAC,SAAS;QAACP,SAAS;QAAAN,QAAA,EAAC;MAEtD;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAElB;AAACd,EAAA,CA3BuBD,qBAAqB;EAAA,QAC7BjB,QAAQ;AAAA;AAAAkC,EAAA,GADAjB,qBAAqB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}