{"ast":null,"code":"var _jsxFileName = \"/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton, Grid, Divider, Card, CardContent, CardActionArea, Button } from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { UserContext } from './Context';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeData = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [relatedRecipes, setRelatedRecipes] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`).then(response => {\n      setRecipe(response.data);\n      document.title = response.data.name;\n      return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n    }).then(res => {\n      setRelatedRecipes(res.data.filter(r => r._id !== id));\n    }).catch(err => console.error(err));\n    axios.get(`http://localhost:3000/response/${id}`).then(response => setRsponse(response.data)).catch(err => console.error(err));\n  }, [id]);\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n    axios.post(`http://localhost:3000/response`, responseData).then(response => {\n      setRsponse(prev => [...prev, response.data]);\n      setNewResponse('');\n      setShowInput(false);\n    }).catch(err => console.error(err));\n  };\n  const handlePrint = () => {\n    const input = document.getElementById('recipe-section');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save(`${recipe.name}.pdf`);\n    });\n  };\n  if (!recipe || !rsponse) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u05D8\\u05D5\\u05E2\\u05DF...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          id: \"recipe-section\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              borderRadius: 3,\n              boxShadow: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"300\",\n              image: `http://localhost:3000${recipe.image}`,\n              alt: recipe.name,\n              sx: {\n                borderTopLeftRadius: 12,\n                borderTopRightRadius: 12,\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                fontWeight: \"bold\",\n                gutterBottom: true,\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                fontWeight: \"bold\",\n                children: \"\\u05DE\\u05E6\\u05E8\\u05DB\\u05D9\\u05DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  disablePadding: true,\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: ingredient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  my: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                fontWeight: \"bold\",\n                children: \"\\u05D0\\u05D5\\u05E4\\u05DF \\u05D4\\u05D4\\u05DB\\u05E0\\u05D4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: recipe.preparationSteps.map((step, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: `${index + 1}. ${step}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 51\n            }, this),\n            onClick: handlePrint,\n            children: \"\\u05D4\\u05D3\\u05E4\\u05E1 \\u05DE\\u05EA\\u05DB\\u05D5\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            mb: 4,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\u05EA\\u05D2\\u05D5\\u05D1\\u05D5\\u05EA \\u05E2\\u05DC \\u05D4\\u05DE\\u05EA\\u05DB\\u05D5\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: rsponse.map((response, index) => {\n              var _response$userCode;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: response.content,\n                  secondary: `מאת: ${(response === null || response === void 0 ? void 0 : (_response$userCode = response.userCode) === null || _response$userCode === void 0 ? void 0 : _response$userCode.username) || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [showInput && /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              label: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\",\n              value: newResponse,\n              onChange: e => setNewResponse(e.target.value),\n              sx: {\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setShowInput(!showInput),\n                children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), showInput && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: addResponse,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"\\u05E9\\u05DC\\u05D7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\u05E2\\u05D5\\u05D3 \\u05DE\\u05EA\\u05DB\\u05D5\\u05E0\\u05D9\\u05DD \\u05D3\\u05D5\\u05DE\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: relatedRecipes.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  display: 'flex'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  href: `/recipe/${item._id}`,\n                  sx: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    component: \"img\",\n                    image: `http://localhost:3000${item.image}`,\n                    alt: item.name,\n                    sx: {\n                      width: 100,\n                      objectFit: 'cover'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeData, \"QFy3hHH0KsD4XEkxwIncJ1+7/dY=\", false, function () {\n  return [useParams];\n});\n_c = RecipeData;\nexport default RecipeData;\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//             <CardMedia\n//               component=\"img\"\n//               height=\"300\"\n//               image={`http://localhost:3000${recipe.image}`}\n//               alt={recipe.name}\n//               sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//             />\n//             <CardContent>\n//               <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//               <List>\n//                 {recipe.ingredients.map((ingredient, index) => (\n//                   <ListItem key={index} disablePadding>\n//                     <ListItemText primary={ingredient} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//               <List>\n//                 {recipe.preparationSteps.map((step, index) => (\n//                   <ListItem key={index}>\n//                     <ListItemText primary={`${index + 1}. ${step}`} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             </CardContent>\n//           </Card>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\nvar _c;\n$RefreshReg$(_c, \"RecipeData\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","axios","Container","Typography","Box","CardMedia","Paper","List","ListItem","ListItemText","TextField","IconButton","Grid","Divider","Card","CardContent","CardActionArea","Button","BorderColorIcon","PrintIcon","UserContext","jsPDF","html2canvas","jsxDEV","_jsxDEV","RecipeData","_s","id","recipe","setRecipe","rsponse","setRsponse","newResponse","setNewResponse","showInput","setShowInput","relatedRecipes","setRelatedRecipes","user","get","then","response","data","document","title","name","categoryCode","res","filter","r","_id","catch","err","console","error","addResponse","responseData","userCode","content","recipeId","publishDate","Date","post","prev","handlePrint","input","getElementById","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","container","spacing","item","xs","md","borderRadius","boxShadow","component","image","alt","borderTopLeftRadius","borderTopRightRadius","objectFit","variant","fontWeight","gutterBottom","my","ingredients","map","ingredient","index","disablePadding","primary","preparationSteps","step","display","justifyContent","startIcon","onClick","elevation","p","mb","_response$userCode","secondary","username","toLocaleDateString","fullWidth","label","value","onChange","e","target","gap","slice","href","_c","$RefreshReg$"],"sources":["/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Container, Typography, Box, CardMedia, Paper,\n  List, ListItem, ListItemText, TextField, IconButton,\n  Grid, Divider, Card, CardContent, CardActionArea, Button\n} from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport PrintIcon from '@mui/icons-material/Print';\nimport { UserContext } from './Context';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nconst RecipeData = () => {\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [relatedRecipes, setRelatedRecipes] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`)\n      .then(response => {\n        setRecipe(response.data);\n        document.title = response.data.name;\n        return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n      })\n      .then(res => {\n        setRelatedRecipes(res.data.filter(r => r._id !== id));\n      })\n      .catch(err => console.error(err));\n\n    axios.get(`http://localhost:3000/response/${id}`)\n      .then(response => setRsponse(response.data))\n      .catch(err => console.error(err));\n  }, [id]);\n\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n\n    axios.post(`http://localhost:3000/response`, responseData)\n      .then(response => {\n        setRsponse(prev => [...prev, response.data]);\n        setNewResponse('');\n        setShowInput(false);\n      })\n      .catch(err => console.error(err));\n  };\n\n  const handlePrint = () => {\n    const input = document.getElementById('recipe-section');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save(`${recipe.name}.pdf`);\n    });\n  };\n\n  if (!recipe || !rsponse) return <div>טוען...</div>;\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n      <Grid container spacing={4}>\n        {/* Right Side - Recipe Details */}\n        <Grid item xs={12} md={8}>\n          <Box id=\"recipe-section\">\n            <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n              <CardMedia\n                component=\"img\"\n                height=\"300\"\n                image={`http://localhost:3000${recipe.image}`}\n                alt={recipe.name}\n                sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n              />\n              <CardContent>\n                <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n                <Divider sx={{ my: 2 }} />\n\n                <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n                <List>\n                  {recipe.ingredients.map((ingredient, index) => (\n                    <ListItem key={index} disablePadding>\n                      <ListItemText primary={ingredient} />\n                    </ListItem>\n                  ))}\n                </List>\n\n                <Divider sx={{ my: 2 }} />\n\n                <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n                <List>\n                  {recipe.preparationSteps.map((step, index) => (\n                    <ListItem key={index}>\n                      <ListItemText primary={`${index + 1}. ${step}`} />\n                    </ListItem>\n                  ))}\n                </List>\n              </CardContent>\n            </Card>\n          </Box>\n          <Box sx={{ mt: 2, display: 'flex', justifyContent: 'flex-end' }}>\n            <Button variant=\"outlined\" startIcon={<PrintIcon />} onClick={handlePrint}>\n              הדפס מתכון\n            </Button>\n          </Box>\n        </Grid>\n\n        {/* Left Side - Comments and Related */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n            <List>\n              {rsponse.map((response, index) => (\n                <ListItem key={index}>\n                  <ListItemText\n                    primary={response.content}\n                    secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n\n            {user && (\n              <Box sx={{ mt: 2 }}>\n                {showInput && (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"הוסף תגובה\"\n                    value={newResponse}\n                    onChange={(e) => setNewResponse(e.target.value)}\n                    sx={{ mb: 1 }}\n                  />\n                )}\n                <Box sx={{ display: 'flex', gap: 1 }}>\n                  <IconButton onClick={() => setShowInput(!showInput)}>\n                    <BorderColorIcon />\n                  </IconButton>\n                  {showInput && (\n                    <IconButton onClick={addResponse}>\n                      <Typography>שלח</Typography>\n                    </IconButton>\n                  )}\n                </Box>\n              </Box>\n            )}\n          </Paper>\n\n          <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n            <Grid container spacing={2}>\n              {relatedRecipes.slice(0, 3).map((item) => (\n                <Grid item xs={12} key={item._id}>\n                  <Card sx={{ display: 'flex' }}>\n                    <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n                      <CardMedia\n                        component=\"img\"\n                        image={`http://localhost:3000${item.image}`}\n                        alt={item.name}\n                        sx={{ width: 100, objectFit: 'cover' }}\n                      />\n                      <CardContent>\n                        <Typography>{item.name}</Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default RecipeData;\n\n\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import {\n//   Container, Typography, Box, CardMedia, Paper,\n//   List, ListItem, ListItemText, TextField, IconButton,\n//   Grid, Divider, Card, CardContent, CardActionArea\n// } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const [relatedRecipes, setRelatedRecipes] = useState([]);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//         return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n//       })\n//       .then(res => {\n//         setRelatedRecipes(res.data.filter(r => r._id !== id));\n//       })\n//       .catch(err => console.error(err));\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => setRsponse(response.data))\n//       .catch(err => console.error(err));\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prev => [...prev, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => console.error(err));\n//   };\n\n//   if (!recipe || !rsponse) return <div>טוען...</div>;\n\n//   return (\n//     <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n//       <Grid container spacing={4}>\n//         {/* Right Side - Recipe Details */}\n//         <Grid item xs={12} md={8}>\n//           <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n//             <CardMedia\n//               component=\"img\"\n//               height=\"300\"\n//               image={`http://localhost:3000${recipe.image}`}\n//               alt={recipe.name}\n//               sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n//             />\n//             <CardContent>\n//               <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n//               <List>\n//                 {recipe.ingredients.map((ingredient, index) => (\n//                   <ListItem key={index} disablePadding>\n//                     <ListItemText primary={ingredient} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n\n//               <Divider sx={{ my: 2 }} />\n\n//               <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n//               <List>\n//                 {recipe.preparationSteps.map((step, index) => (\n//                   <ListItem key={index}>\n//                     <ListItemText primary={`${index + 1}. ${step}`} />\n//                   </ListItem>\n//                 ))}\n//               </List>\n//             </CardContent>\n//           </Card>\n//         </Grid>\n\n//         {/* Left Side - Comments and Related */}\n//         <Grid item xs={12} md={4}>\n//           <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n//             <List>\n//               {rsponse.map((response, index) => (\n//                 <ListItem key={index}>\n//                   <ListItemText\n//                     primary={response.content}\n//                     secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n//                   />\n//                 </ListItem>\n//               ))}\n//             </List>\n\n//             {user && (\n//               <Box sx={{ mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     fullWidth\n//                     variant=\"outlined\"\n//                     label=\"הוסף תגובה\"\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ mb: 1 }}\n//                   />\n//                 )}\n//                 <Box sx={{ display: 'flex', gap: 1 }}>\n//                   <IconButton onClick={() => setShowInput(!showInput)}>\n//                     <BorderColorIcon />\n//                   </IconButton>\n//                   {showInput && (\n//                     <IconButton onClick={addResponse}>\n//                       <Typography>שלח</Typography>\n//                     </IconButton>\n//                   )}\n//                 </Box>\n//               </Box>\n//             )}\n//           </Paper>\n\n//           <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n//             <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n//             <Grid container spacing={2}>\n//               {relatedRecipes.slice(0, 3).map((item) => (\n//                 <Grid item xs={12} key={item._id}>\n//                   <Card sx={{ display: 'flex' }}>\n//                     <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n//                       <CardMedia\n//                         component=\"img\"\n//                         image={`http://localhost:3000${item.image}`}\n//                         alt={item.name}\n//                         sx={{ width: 100, objectFit: 'cover' }}\n//                       />\n//                       <CardContent>\n//                         <Typography>{item.name}</Typography>\n//                       </CardContent>\n//                     </CardActionArea>\n//                   </Card>\n//                 </Grid>\n//               ))}\n//             </Grid>\n//           </Paper>\n//         </Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n\n\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}