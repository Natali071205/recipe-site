{"ast":null,"code":"var _jsxFileName = \"/Users/nataliatiya/project/client/my-app/src/project/Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { TextField, Box, Typography, Card, CardContent } from '@mui/material';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\"); // כדי לאחסן את הערך שהוזן בשדה החיפוש\n  const [filteredRecipes, setFilteredRecipes] = useState([]); // לאחסן את המתכונים המפולטרים לפי החיפוש\n  const nav = useNavigate();\n  useEffect(() => {\n    const getAllRecipes = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/recipes'); // עדכון לכתובת API מתאימה\n        setRecipes(response.data); // שים לב שמעדכנים את `recipes` עם הנתונים שהתקבלו מה-API\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getAllRecipes();\n  }, []); // ריצה פעם אחת כשמרכיב `Search` נטען\n\n  // פונקציה שמטפלת בחיפוש ומסננת את המתכונים\n  const handleSearchChange = event => {\n    const query = event.target.value;\n    setSearchQuery(query); // עדכון ה-state של החיפוש\n    if (query === \"\") {\n      setFilteredRecipes([]); // אם החיפוש ריק, לא מחזירים את כל המתכונים\n    } else {\n      const filtered = recipes.filter(recipe => recipe.name.toLowerCase().includes(query.toLowerCase()) // חיפוש שמכיל את המילה שנכתבה\n      );\n      setFilteredRecipes(filtered); // עדכון המתכונים המפולטרים\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      top: '9px',\n      direction: 'rtl',\n      left: '63px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u05D7\\u05E4\\u05E9 \\u05DE\\u05EA\\u05DB\\u05D5\\u05DF...\",\n      variant: \"outlined\",\n      value: searchQuery // שמירה על ערך ה-input\n      ,\n      onChange: handleSearchChange // קריאה לפונקציה כל פעם שהמשתמש מקליד\n      ,\n      fullWidth: true,\n      sx: {\n        marginBottom: 2,\n        borderRadius: '15px',\n        // פינות מעוגלות\n        backgroundColor: 'transparent',\n        // רקע שקוף\n        '& .MuiOutlinedInput-root': {\n          '& fieldset': {\n            borderColor: 'black' // צבע גבול לבן\n          },\n          '&:hover fieldset': {\n            borderColor: 'black' // צבע גבול בלחיצה\n          }\n        },\n        '& .MuiInputLabel-root': {\n          color: 'black' // צבע התווית לבן\n        },\n        '& .MuiInputBase-input': {\n          color: 'black' // צבע הטקסט לבן\n        },\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' // צל מקוקוו\n      } // הסטיילינג ל-TextField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), searchQuery && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        color: \"black\",\n        position: 'absolute',\n        backgroundColor: 'white',\n        width: '100%',\n        maxHeight: '400px',\n        overflowY: 'auto',\n        padding: '8px',\n        boxShadow: 2\n      },\n      children: filteredRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          fontSize: '10px'\n        },\n        children: \"\\u05DC\\u05D0 \\u05E0\\u05DE\\u05E6\\u05D0\\u05D5 \\u05DE\\u05EA\\u05DB\\u05D5\\u05E0\\u05D9\\u05DD \\u05EA\\u05D5\\u05D0\\u05DE\\u05D9\\u05DD.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this) : filteredRecipes.map(recipe => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          onClick: () => {\n            console.log('click!!!', recipe._id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              fontSize: '12px',\n              fontWeight: 600\n            },\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              fontSize: '10px'\n            },\n            children: recipe.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this)\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"/mqo7qAJKbj6xpFULXNTeEyG8dQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Box","Typography","Card","CardContent","useNavigate","jsxDEV","_jsxDEV","Search","_s","recipes","setRecipes","searchQuery","setSearchQuery","filteredRecipes","setFilteredRecipes","nav","getAllRecipes","response","get","data","err","console","error","handleSearchChange","event","query","target","value","filtered","filter","recipe","name","toLowerCase","includes","sx","position","top","direction","left","children","label","variant","onChange","fullWidth","marginBottom","borderRadius","backgroundColor","borderColor","color","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","width","maxHeight","overflowY","padding","length","fontSize","map","onClick","log","_id","fontWeight","description","_c","$RefreshReg$"],"sources":["/Users/nataliatiya/project/client/my-app/src/project/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { TextField, Box, Typography, Card, CardContent } from '@mui/material';\nimport { useNavigate } from \"react-router-dom\";\n\nconst Search = () => {\n    const [recipes, setRecipes] = useState([]);\n    const [searchQuery, setSearchQuery] = useState(\"\"); // כדי לאחסן את הערך שהוזן בשדה החיפוש\n    const [filteredRecipes, setFilteredRecipes] = useState([]); // לאחסן את המתכונים המפולטרים לפי החיפוש\nconst nav=useNavigate();\n\n    useEffect(() => {\n        const getAllRecipes = async () => {\n            try {\n                const response = await axios.get('http://localhost:3000/recipes'); // עדכון לכתובת API מתאימה\n                setRecipes(response.data); // שים לב שמעדכנים את `recipes` עם הנתונים שהתקבלו מה-API\n            } catch (err) {\n                console.error(err);\n            }\n        };\n        getAllRecipes();\n    }, []); // ריצה פעם אחת כשמרכיב `Search` נטען\n\n    // פונקציה שמטפלת בחיפוש ומסננת את המתכונים\n    const handleSearchChange = (event) => {\n        const query = event.target.value;\n        setSearchQuery(query); // עדכון ה-state של החיפוש\n        if (query === \"\") {\n            setFilteredRecipes([]); // אם החיפוש ריק, לא מחזירים את כל המתכונים\n        } else {\n            const filtered = recipes.filter(recipe => \n                recipe.name.toLowerCase().includes(query.toLowerCase()) // חיפוש שמכיל את המילה שנכתבה\n            );\n            setFilteredRecipes(filtered); // עדכון המתכונים המפולטרים\n        }\n    };\n\n    return (\n        <Box sx={{ position: 'relative', top: '9px', direction: 'rtl', left: '63px' }}>\n            {/* שדה חיפוש */}\n            <TextField\n                label=\"חפש מתכון...\"\n                variant=\"outlined\"\n                value={searchQuery} // שמירה על ערך ה-input\n                onChange={handleSearchChange} // קריאה לפונקציה כל פעם שהמשתמש מקליד\n                fullWidth\n                sx={{\n                    marginBottom: 2,\n                    borderRadius: '15px',  // פינות מעוגלות\n                    backgroundColor: 'transparent', // רקע שקוף\n                    '& .MuiOutlinedInput-root': {\n                        '& fieldset': {\n                            borderColor: 'black', // צבע גבול לבן\n                        },\n                        '&:hover fieldset': {\n                            borderColor: 'black', // צבע גבול בלחיצה\n                        },\n                    },\n                    '& .MuiInputLabel-root': {\n                        color: 'black', // צבע התווית לבן\n                    },\n                    '& .MuiInputBase-input': {\n                        color: 'black', // צבע הטקסט לבן\n                    },\n                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // צל מקוקוו\n                }} // הסטיילינג ל-TextField\n            />\n\n            {/* תוצאה של חיפוש - הצגת תוצאה רק אם יש חיפוש */}\n            {searchQuery && (\n                <Box sx={{\n                    color: \"black\", \n                    position: 'absolute', \n                    backgroundColor: 'white', \n                    width: '100%', \n                    maxHeight: '400px', \n                    overflowY: 'auto', \n                    padding: '8px', \n                    boxShadow: 2\n                }}>\n                    {filteredRecipes.length === 0 ? (\n                        <Typography variant=\"body2\" sx={{ fontSize: '10px' }}>לא נמצאו מתכונים תואמים.</Typography>\n                    ) : (\n                        filteredRecipes.map((recipe) => (\n                            <Card key={recipe._id} sx={{ marginBottom: 2 }} >\n                                <CardContent onClick={()=>{console.log('click!!!',recipe._id);\n                                }}>\n                                    <Typography variant=\"body1\" sx={{ fontSize: '12px', fontWeight: 600 }}>\n                                        {recipe.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontSize: '10px' }}>\n                                        {recipe.description}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        ))\n                    )}\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}