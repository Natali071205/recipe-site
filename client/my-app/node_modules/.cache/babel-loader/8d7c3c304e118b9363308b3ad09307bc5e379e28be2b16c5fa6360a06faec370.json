{"ast":null,"code":"// import * as React from 'react';\n// // import axios from 'axios';\n// import {\n//   Button,\n//   FormControl,\n//   FormControlLabel,\n//   Checkbox,\n//   InputLabel,\n//   OutlinedInput,\n//   TextField,\n//   InputAdornment,\n//   Link,\n//   Alert,\n//   IconButton,\n// } from '@mui/material';\n// import AccountCircle from '@mui/icons-material/AccountCircle';\n// import Visibility from '@mui/icons-material/Visibility';\n// import VisibilityOff from '@mui/icons-material/VisibilityOff';\n// import { AppProvider } from '@toolpad/core/AppProvider';\n// import { SignInPage } from '@toolpad/core/SignInPage';\n// import { useTheme } from '@mui/material/styles';\n// import { useState } from 'react';\n\n// const providers = [{ id: 'credentials', name: 'Name and Password' }];\n\n// function CustomNameField() {\n//   return (\n//     <TextField\n//       id=\"input-with-icon-textfield\"\n//       label=\"שם\"\n//       name=\"name\"\n//       type=\"text\"\n//       size=\"small\"\n//       required\n//       fullWidth\n//       slotProps={{\n//         input: {\n//           startAdornment: (\n//             <InputAdornment position=\"start\">\n//               <AccountCircle fontSize=\"inherit\" />\n//             </InputAdornment>\n//           ),\n//         },\n//       }}\n//       variant=\"outlined\"\n//     />\n//   );\n// }\n\n// function CustomPasswordField() {\n//   const [showPassword, setShowPassword] = React.useState(false);\n\n//   const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n//   const handleMouseDownPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n//   return (\n//     <FormControl sx={{ my: 2 }} fullWidth variant=\"outlined\">\n//       <InputLabel size=\"small\" htmlFor=\"outlined-adornment-password\">\n//         סיסמא\n//       </InputLabel>\n//       <OutlinedInput\n//         id=\"outlined-adornment-password\"\n//         type={showPassword ? 'text' : 'password'}\n//         name=\"password\"\n//         size=\"small\"\n//         endAdornment={\n//           <InputAdornment position=\"end\">\n//             <IconButton\n//               aria-label=\"toggle password visibility\"\n//               onClick={handleClickShowPassword}\n//               onMouseDown={handleMouseDownPassword}\n//               edge=\"end\"\n//               size=\"small\"\n//             >\n//               {showPassword ? (\n//                 <VisibilityOff fontSize=\"inherit\" />\n//               ) : (\n//                 <Visibility fontSize=\"inherit\" />\n//               )}\n//             </IconButton>\n//           </InputAdornment>\n//         }\n//         label=\"Password\"\n//       />\n//     </FormControl>\n//   );\n// }\n\n// function CustomButton() {\n\n//   return (\n//     <Button\n//       type=\"submit\"\n//       variant=\"outlined\"\n//       color=\"info\"\n//       size=\"small\"\n//       disableElevation\n//       fullWidth\n//       sx={{ my: 2 }}\n//     >\n//       התחברות\n//     </Button>\n//   );\n// }\n\n// function SignUpLink() {\n//   return (\n//     <Link href=\"/\" variant=\"body2\">\n//       הרשמה\n//     </Link>\n//   );\n// }\n\n// // function ForgotPasswordLink() {\n// //   return (\n// //     <Link href=\"/\" variant=\"body2\">\n// //       Forgot password?\n// //     </Link>\n// //   );\n// // }\n\n// function Title() {\n//   return <h2 style={{ marginBottom: 8 }}>התחברות</h2>;\n// }\n\n// function Subtitle() {\n//   return (\n//     <Alert sx={{ mb: 2, px: 1, py: 0.25 }} severity=\"error\">\n//       משתמש לא קיים\n//     </Alert>\n//   );\n// }\n\n// function AgreeWithTerms() {\n//   return (\n//     <FormControlLabel\n//       control={\n//         <Checkbox\n//           name=\"tandc\"\n//           value=\"true\"\n//           color=\"primary\"\n//           sx={{ padding: 0.5, '& .MuiSvgIcon-root': { fontSize: 20 } }}\n//         />\n//       }\n//       slotProps={{\n//         typography: {\n//           fontSize: 14,\n//         },\n//       }}\n//       color=\"textSecondary\"\n//       label=\"אני מסכימ/ה לתקנון\"\n//     />\n//   );\n// }\n\n// export default function LogIn() {\n//   const theme = useTheme();\n//   const [userData,setUserData] = useState({\n//     name:\"\",password:\"\"\n//   });\n//   React.useEffect(()=>{\n//     console.log('user-data',userData);\n\n//   },[userData])\n//   return (\n//     <AppProvider theme={theme}>\n//       <SignInPage\n//         signIn={(provider, formData) => {\n//           setUserData({name:formData.get('name'),password:formData.get('password')})\n//           console.log('data',formData.get('name'))\n\n//         }\n//         }\n//         slots={{\n//           title: Title,\n//           subtitle: Subtitle,\n//           emailField: CustomNameField,\n//           passwordField: CustomPasswordField,\n//           submitButton: CustomButton,\n//           signUpLink: SignUpLink,\n//           rememberMe: AgreeWithTerms,\n//           // forgotPasswordLink: ForgotPasswordLink,\n//         }}\n//         providers={providers}\n//       />\n//     </AppProvider>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/nataliatiya/project/client/my-app/src/project/LogIn.jsx"],"sourcesContent":["// import * as React from 'react';\n// // import axios from 'axios';\n// import {\n//   Button,\n//   FormControl,\n//   FormControlLabel,\n//   Checkbox,\n//   InputLabel,\n//   OutlinedInput,\n//   TextField,\n//   InputAdornment,\n//   Link,\n//   Alert,\n//   IconButton,\n// } from '@mui/material';\n// import AccountCircle from '@mui/icons-material/AccountCircle';\n// import Visibility from '@mui/icons-material/Visibility';\n// import VisibilityOff from '@mui/icons-material/VisibilityOff';\n// import { AppProvider } from '@toolpad/core/AppProvider';\n// import { SignInPage } from '@toolpad/core/SignInPage';\n// import { useTheme } from '@mui/material/styles';\n// import { useState } from 'react';\n\n// const providers = [{ id: 'credentials', name: 'Name and Password' }];\n\n// function CustomNameField() {\n//   return (\n//     <TextField\n//       id=\"input-with-icon-textfield\"\n//       label=\"שם\"\n//       name=\"name\"\n//       type=\"text\"\n//       size=\"small\"\n//       required\n//       fullWidth\n//       slotProps={{\n//         input: {\n//           startAdornment: (\n//             <InputAdornment position=\"start\">\n//               <AccountCircle fontSize=\"inherit\" />\n//             </InputAdornment>\n//           ),\n//         },\n//       }}\n//       variant=\"outlined\"\n//     />\n//   );\n// }\n\n// function CustomPasswordField() {\n//   const [showPassword, setShowPassword] = React.useState(false);\n\n//   const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n//   const handleMouseDownPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n//   return (\n//     <FormControl sx={{ my: 2 }} fullWidth variant=\"outlined\">\n//       <InputLabel size=\"small\" htmlFor=\"outlined-adornment-password\">\n//         סיסמא\n//       </InputLabel>\n//       <OutlinedInput\n//         id=\"outlined-adornment-password\"\n//         type={showPassword ? 'text' : 'password'}\n//         name=\"password\"\n//         size=\"small\"\n//         endAdornment={\n//           <InputAdornment position=\"end\">\n//             <IconButton\n//               aria-label=\"toggle password visibility\"\n//               onClick={handleClickShowPassword}\n//               onMouseDown={handleMouseDownPassword}\n//               edge=\"end\"\n//               size=\"small\"\n//             >\n//               {showPassword ? (\n//                 <VisibilityOff fontSize=\"inherit\" />\n//               ) : (\n//                 <Visibility fontSize=\"inherit\" />\n//               )}\n//             </IconButton>\n//           </InputAdornment>\n//         }\n//         label=\"Password\"\n//       />\n//     </FormControl>\n//   );\n// }\n\n// function CustomButton() {\n\n//   return (\n//     <Button\n//       type=\"submit\"\n//       variant=\"outlined\"\n//       color=\"info\"\n//       size=\"small\"\n//       disableElevation\n//       fullWidth\n//       sx={{ my: 2 }}\n//     >\n//       התחברות\n//     </Button>\n//   );\n// }\n\n// function SignUpLink() {\n//   return (\n//     <Link href=\"/\" variant=\"body2\">\n//       הרשמה\n//     </Link>\n//   );\n// }\n\n// // function ForgotPasswordLink() {\n// //   return (\n// //     <Link href=\"/\" variant=\"body2\">\n// //       Forgot password?\n// //     </Link>\n// //   );\n// // }\n\n// function Title() {\n//   return <h2 style={{ marginBottom: 8 }}>התחברות</h2>;\n// }\n\n// function Subtitle() {\n//   return (\n//     <Alert sx={{ mb: 2, px: 1, py: 0.25 }} severity=\"error\">\n//       משתמש לא קיים\n//     </Alert>\n//   );\n// }\n\n// function AgreeWithTerms() {\n//   return (\n//     <FormControlLabel\n//       control={\n//         <Checkbox\n//           name=\"tandc\"\n//           value=\"true\"\n//           color=\"primary\"\n//           sx={{ padding: 0.5, '& .MuiSvgIcon-root': { fontSize: 20 } }}\n//         />\n//       }\n//       slotProps={{\n//         typography: {\n//           fontSize: 14,\n//         },\n//       }}\n//       color=\"textSecondary\"\n//       label=\"אני מסכימ/ה לתקנון\"\n//     />\n//   );\n// }\n\n// export default function LogIn() {\n//   const theme = useTheme();\n//   const [userData,setUserData] = useState({\n//     name:\"\",password:\"\"\n//   });\n//   React.useEffect(()=>{\n//     console.log('user-data',userData);\n    \n//   },[userData])\n//   return (\n//     <AppProvider theme={theme}>\n//       <SignInPage\n//         signIn={(provider, formData) => {\n//           setUserData({name:formData.get('name'),password:formData.get('password')})\n//           console.log('data',formData.get('name'))\n          \n//         }\n//         }\n//         slots={{\n//           title: Title,\n//           subtitle: Subtitle,\n//           emailField: CustomNameField,\n//           passwordField: CustomPasswordField,\n//           submitButton: CustomButton,\n//           signUpLink: SignUpLink,\n//           rememberMe: AgreeWithTerms,\n//           // forgotPasswordLink: ForgotPasswordLink,\n//         }}\n//         providers={providers}\n//       />\n//     </AppProvider>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}