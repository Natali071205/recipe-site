{"ast":null,"code":"var _jsxFileName = \"/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton, Grid, Divider, Card, CardContent, CardActionArea } from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport { UserContext } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeData = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [relatedRecipes, setRelatedRecipes] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`).then(response => {\n      setRecipe(response.data);\n      return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n    }).then(res => {\n      setRelatedRecipes(res.data.filter(r => r._id !== id));\n    }).catch(err => console.error(err));\n    axios.get(`http://localhost:3000/response/${id}`).then(response => setRsponse(response.data)).catch(err => console.error(err));\n  }, [id]);\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n    axios.post(`http://localhost:3000/response`, responseData).then(response => {\n      setRsponse(prev => [...prev, response.data]);\n      setNewResponse('');\n      setShowInput(false);\n    }).catch(err => console.error(err));\n  };\n  if (!recipe || !rsponse) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u05D8\\u05D5\\u05E2\\u05DF...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            borderRadius: 3,\n            boxShadow: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"300\",\n            image: `http://localhost:3000${recipe.image}`,\n            alt: recipe.name,\n            sx: {\n              borderTopLeftRadius: 12,\n              borderTopRightRadius: 12,\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              gutterBottom: true,\n              children: recipe.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontWeight: \"bold\",\n              children: \"\\u05DE\\u05E6\\u05E8\\u05DB\\u05D9\\u05DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: ingredient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                my: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              fontWeight: \"bold\",\n              children: \"\\u05D0\\u05D5\\u05E4\\u05DF \\u05D4\\u05D4\\u05DB\\u05E0\\u05D4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: recipe.preparationSteps.map((step, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${index + 1}. ${step}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            mb: 4,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\u05EA\\u05D2\\u05D5\\u05D1\\u05D5\\u05EA \\u05E2\\u05DC \\u05D4\\u05DE\\u05EA\\u05DB\\u05D5\\u05DF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: rsponse.map((response, index) => {\n              var _response$userCode;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: response.content,\n                  secondary: `מאת: ${(response === null || response === void 0 ? void 0 : (_response$userCode = response.userCode) === null || _response$userCode === void 0 ? void 0 : _response$userCode.username) || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [showInput && /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              variant: \"outlined\",\n              label: \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05EA\\u05D2\\u05D5\\u05D1\\u05D4\",\n              value: newResponse,\n              onChange: e => setNewResponse(e.target.value),\n              sx: {\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setShowInput(!showInput),\n                children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), showInput && /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: addResponse,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"\\u05E9\\u05DC\\u05D7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2,\n            borderRadius: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\u05E2\\u05D5\\u05D3 \\u05DE\\u05EA\\u05DB\\u05D5\\u05E0\\u05D9\\u05DD \\u05D3\\u05D5\\u05DE\\u05D9\\u05DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: relatedRecipes.slice(0, 3).map(item => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  display: 'flex'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                  href: `/recipe/${item._id}`,\n                  sx: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    component: \"img\",\n                    image: `http://localhost:3000${item.image}`,\n                    alt: item.name,\n                    sx: {\n                      width: 100,\n                      objectFit: 'cover'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, item._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeData, \"QFy3hHH0KsD4XEkxwIncJ1+7/dY=\", false, function () {\n  return [useParams];\n});\n_c = RecipeData;\nexport default RecipeData;\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\nvar _c;\n$RefreshReg$(_c, \"RecipeData\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useParams","axios","Container","Typography","Box","CardMedia","Paper","List","ListItem","ListItemText","TextField","IconButton","Grid","Divider","Card","CardContent","CardActionArea","BorderColorIcon","UserContext","jsxDEV","_jsxDEV","RecipeData","_s","id","recipe","setRecipe","rsponse","setRsponse","newResponse","setNewResponse","showInput","setShowInput","relatedRecipes","setRelatedRecipes","user","get","then","response","data","categoryCode","res","filter","r","_id","catch","err","console","error","addResponse","responseData","userCode","content","recipeId","publishDate","Date","post","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","container","spacing","item","xs","md","borderRadius","boxShadow","component","height","image","alt","name","borderTopLeftRadius","borderTopRightRadius","objectFit","variant","fontWeight","gutterBottom","my","ingredients","map","ingredient","index","disablePadding","primary","preparationSteps","step","elevation","p","mb","_response$userCode","secondary","username","toLocaleDateString","fullWidth","label","value","onChange","e","target","display","gap","onClick","slice","href","width","_c","$RefreshReg$"],"sources":["/Users/nataliatiya/project/client/my-app/src/project/RecipeData.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport {\n  Container, Typography, Box, CardMedia, Paper,\n  List, ListItem, ListItemText, TextField, IconButton,\n  Grid, Divider, Card, CardContent, CardActionArea\n} from '@mui/material';\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\nimport { UserContext } from './Context';\n\nconst RecipeData = () => {\n  const { id } = useParams();\n  const [recipe, setRecipe] = useState(null);\n  const [rsponse, setRsponse] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [showInput, setShowInput] = useState(false);\n  const [relatedRecipes, setRelatedRecipes] = useState([]);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/recipes/${id}`)\n      .then(response => {\n        setRecipe(response.data);\n        return axios.get(`http://localhost:3000/recipes/category/${response.data.categoryCode}`);\n      })\n      .then(res => {\n        setRelatedRecipes(res.data.filter(r => r._id !== id));\n      })\n      .catch(err => console.error(err));\n\n    axios.get(`http://localhost:3000/response/${id}`)\n      .then(response => setRsponse(response.data))\n      .catch(err => console.error(err));\n  }, [id]);\n\n  const addResponse = () => {\n    const responseData = {\n      userCode: user._id,\n      content: newResponse,\n      recipeId: id,\n      publishDate: new Date()\n    };\n\n    axios.post(`http://localhost:3000/response`, responseData)\n      .then(response => {\n        setRsponse(prev => [...prev, response.data]);\n        setNewResponse('');\n        setShowInput(false);\n      })\n      .catch(err => console.error(err));\n  };\n\n  if (!recipe || !rsponse) return <div>טוען...</div>;\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n      <Grid container spacing={4}>\n        {/* Right Side - Recipe Details */}\n        <Grid item xs={12} md={8}>\n          <Card sx={{ borderRadius: 3, boxShadow: 4 }}>\n            <CardMedia\n              component=\"img\"\n              height=\"300\"\n              image={`http://localhost:3000${recipe.image}`}\n              alt={recipe.name}\n              sx={{ borderTopLeftRadius: 12, borderTopRightRadius: 12, objectFit: 'cover' }}\n            />\n            <CardContent>\n              <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>{recipe.name}</Typography>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Typography variant=\"h6\" fontWeight=\"bold\">מצרכים</Typography>\n              <List>\n                {recipe.ingredients.map((ingredient, index) => (\n                  <ListItem key={index} disablePadding>\n                    <ListItemText primary={ingredient} />\n                  </ListItem>\n                ))}\n              </List>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Typography variant=\"h6\" fontWeight=\"bold\">אופן ההכנה</Typography>\n              <List>\n                {recipe.preparationSteps.map((step, index) => (\n                  <ListItem key={index}>\n                    <ListItemText primary={`${index + 1}. ${step}`} />\n                  </ListItem>\n                ))}\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Left Side - Comments and Related */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={3} sx={{ p: 2, mb: 4, borderRadius: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>תגובות על המתכון</Typography>\n            <List>\n              {rsponse.map((response, index) => (\n                <ListItem key={index}>\n                  <ListItemText\n                    primary={response.content}\n                    secondary={`מאת: ${response?.userCode?.username || 'אנונימי'} | ${new Date(response.publishDate).toLocaleDateString('he-IL')}`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n\n            {user && (\n              <Box sx={{ mt: 2 }}>\n                {showInput && (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    label=\"הוסף תגובה\"\n                    value={newResponse}\n                    onChange={(e) => setNewResponse(e.target.value)}\n                    sx={{ mb: 1 }}\n                  />\n                )}\n                <Box sx={{ display: 'flex', gap: 1 }}>\n                  <IconButton onClick={() => setShowInput(!showInput)}>\n                    <BorderColorIcon />\n                  </IconButton>\n                  {showInput && (\n                    <IconButton onClick={addResponse}>\n                      <Typography>שלח</Typography>\n                    </IconButton>\n                  )}\n                </Box>\n              </Box>\n            )}\n          </Paper>\n\n          <Paper elevation={3} sx={{ p: 2, borderRadius: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>עוד מתכונים דומים</Typography>\n            <Grid container spacing={2}>\n              {relatedRecipes.slice(0, 3).map((item) => (\n                <Grid item xs={12} key={item._id}>\n                  <Card sx={{ display: 'flex' }}>\n                    <CardActionArea href={`/recipe/${item._id}`} sx={{ display: 'flex' }}>\n                      <CardMedia\n                        component=\"img\"\n                        image={`http://localhost:3000${item.image}`}\n                        alt={item.name}\n                        sx={{ width: 100, objectFit: 'cover' }}\n                      />\n                      <CardContent>\n                        <Typography>{item.name}</Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default RecipeData;\n\n\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Container, Typography, Box, CardMedia, Paper, List, ListItem, ListItemText, TextField, IconButton } from '@mui/material';\n// import BorderColorIcon from '@mui/icons-material/BorderColor';\n// import { UserContext } from './Context';\n\n// const RecipeData = () => {\n//   const { id } = useParams();\n//   const [recipe, setRecipe] = useState(null);\n//   const [rsponse, setRsponse] = useState(null);\n//   const [newResponse, setNewResponse] = useState('');\n//   const [showInput, setShowInput] = useState(false);\n//   const { user } = useContext(UserContext);\n\n//   useEffect(() => {\n//     axios.get(`http://localhost:3000/recipes/${id}`)\n//       .then(response => {\n//         setRecipe(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching recipe:\", err);\n//       });\n\n//     axios.get(`http://localhost:3000/response/${id}`)\n//       .then(response => {\n//         setRsponse(response.data);\n//       })\n//       .catch(err => {\n//         console.error(\"Error fetching responses:\", err);\n//       });\n//   }, [id]);\n\n//   const addResponse = () => {\n//     const responseData = {\n//       userCode: user._id,\n//       content: newResponse,\n//       recipeId: id,\n//       publishDate: new Date()\n//     };\n\n//     axios.post(`http://localhost:3000/response`, responseData)\n//       .then(response => {\n//         setRsponse(prevResponses => [...prevResponses, response.data]);\n//         setNewResponse('');\n//         setShowInput(false);\n//       })\n//       .catch(err => {\n//         console.error(\"Error adding response:\", err);\n//       });\n//   };\n\n//   if (!recipe || !rsponse) {\n//     return <div>טוען...</div>;\n//   }\n\n//   return (\n//     <Container sx={{ mt: 4, paddingTop: \"50px\" }}>\n//       <Typography variant=\"h3\" align=\"center\" gutterBottom sx={{ mt: 2, fontWeight: 'bold', textDecoration: 'underline', fontFamily: '\"Lora\", serif' }}>\n//         {recipe.name}\n//       </Typography>\n\n//       <CardMedia\n//         component=\"img\"\n//         image={`http://localhost:3000${recipe.image}`}\n//         alt={recipe.name}\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           height: 300,\n//           borderRadius: 2,\n//           boxShadow: 3,\n//           objectFit: \"cover\",\n//           mx: \"auto\",\n//           display: \"block\"\n//         }}\n//       />\n\n//       <Box sx={{ mt: 4, borderRadius: 2, padding: 2 }}>\n//         <Typography\n//           variant=\"h5\"\n//           gutterBottom\n//           sx={{\n//             fontWeight: 'bold',\n//             textAlign: 'center',\n//             bgcolor: '#f5f5f5',\n//             py: 1,\n//             borderRadius: 1,\n//             fontFamily: '\"Lora\", serif',\n//             borderBottom: '2px solid #dc4337',\n//             color: 'black'\n//           }}\n//         >\n//           מצרכים\n//         </Typography>\n\n//         <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n//           {recipe.ingredients.map((ingredient, index) => {\n//             const [amount, name] = ingredient.split(' ', 2);\n//             return (\n//               <Box\n//                 key={index}\n//                 sx={{\n//                   display: 'flex',\n//                   justifyContent: 'center',\n//                   alignItems: 'center',\n//                   backgroundColor: '#fafafa',\n//                   borderRadius: 1,\n//                   padding: 1,\n//                   width: '80%',\n//                   boxShadow: 1,\n//                   transition: 'transform 0.3s',\n//                   '&:hover': {\n//                     transform: 'scale(1.05)',\n//                     boxShadow: 3\n//                   }\n//                 }}\n//               >\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555', marginRight: 1 }}>\n//                   {amount || '-'}\n//                 </Typography>\n//                 <Typography sx={{ fontSize: '1rem', fontWeight: '500', color: '#555' }}>\n//                   {name || ingredient}\n//                 </Typography>\n//               </Box>\n//             );\n//           })}\n//         </Box>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderRadius: 1,\n//           borderBottom: '2px solid #dc4337',\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           שלבי הכנה\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {recipe.preparationSteps.map((step, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText primary={` ${step}`} sx={{ fontFamily: '\"Varela Round\", sans-serif', direction: \"rtl\" }} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Paper>\n//       </Box>\n\n//       <Box sx={{ mt: 4 }}>\n//         <Typography variant=\"h5\" gutterBottom sx={{\n//           fontWeight: 'bold',\n//           textAlign: 'center',\n//           bgcolor: '#f5f5f5',\n//           py: 1,\n//           borderBottom: '2px solid #dc4337',\n//           borderRadius: 1,\n//           fontFamily: '\"Lora\", serif',\n//         }}>\n//           תגובות על המתכון\n//         </Typography>\n//         <Paper elevation={3} sx={{ p: 2, mt: 2 }}>\n//           <List>\n//             {rsponse.map((response, index) => (\n//               <ListItem sx={{ textAlign: 'start' }} key={index}>\n//                 <ListItemText\n//                   primary={\n//                     <>\n//                       <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                           fontFamily: '\"Varela Round\", sans-serif',\n//                           direction: \"rtl\",\n//                           fontWeight: 'bold',\n//                           display: 'inline-block',\n//                           marginBottom: 1,\n//                         }}\n//                       >\n//                         {response.content}\n//                       </Typography>\n//                       <Box sx={{ display: 'flex', justifyContent: 'space-between', fontSize: '0.875rem', color: '#555' }}>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {response?.userCode?.username}\n//                         </Typography>\n//                         <Typography sx={{ fontFamily: '\"Varela Round\", sans-serif' }}>\n//                           {new Date(response.publishDate).toLocaleDateString('he-IL')}\n//                         </Typography>\n//                       </Box>\n//                     </>\n//                   }\n//                 />\n//               </ListItem>\n//             ))}\n\n//             {user && (\n//               <Box sx={{ direction: \"rtl\", display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n//                 {showInput && (\n//                   <TextField\n//                     color='black'\n//                     label=\"הוסף תגובה\"\n//                     variant=\"outlined\"\n//                     fullWidth\n//                     value={newResponse}\n//                     onChange={(e) => setNewResponse(e.target.value)}\n//                     sx={{ marginRight: 2, direction: \"rtl\" }}\n//                   />\n//                 )}\n//                 <IconButton onClick={() => setShowInput(!showInput)} color=\"black\">\n//                   <BorderColorIcon sx={{ fontSize: 40 }} />\n//                 </IconButton>\n//                 {showInput && (\n//                   <IconButton onClick={addResponse} color=\"black\">\n//                     שלח\n//                   </IconButton>\n//                 )}\n//               </Box>\n//             )}\n//           </List>\n//         </Paper>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default RecipeData;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}